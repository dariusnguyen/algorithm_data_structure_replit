'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

'''
method 1:
iteratively generate fibo numbers
if a fibo number is even, add it to the list
once the limit is reached, sum numbers in list

method 2:
iteratively generate EVEN fibo numbers using formula:
even_fibo_n = 4*even_fibo_n-1 + even_fibo_n-2
add numbers to list
once the limit is reached, sum numbers in list
'''

def sum_even_fibs(under = 100):
  # method 1
  # evens = []
  # x=1
  # y=2
  # print(x, end=' ')
  # while y<under:
  #   print(y, end=' ')
  #   if y%2 == 0:
  #     evens.append(y)
  #   temp = y
  #   y = x + y
  #   x = temp
  # print()

  #method 2
  evens = []
  x=0
  y=2
  print(x, end=' ')
  while y<under:
    evens.append(y)
    print(y, end=' ')
    temp = y
    y = 4*y + x
    x = temp
  print()
  
  return sum(evens)